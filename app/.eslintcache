[{"C:\\Users\\Евгений\\Desktop\\instagram\\rsclone\\app\\src\\index.js":"1","C:\\Users\\Евгений\\Desktop\\instagram\\rsclone\\app\\src\\App.js":"2","C:\\Users\\Евгений\\Desktop\\instagram\\rsclone\\app\\src\\reportWebVitals.js":"3","C:\\Users\\Евгений\\Desktop\\instagram\\rsclone\\app\\src\\components\\Navbar.js":"4","C:\\Users\\Евгений\\Desktop\\instagram\\rsclone\\app\\src\\components\\screens\\Home.js":"5","C:\\Users\\Евгений\\Desktop\\instagram\\rsclone\\app\\src\\components\\screens\\Login.js":"6","C:\\Users\\Евгений\\Desktop\\instagram\\rsclone\\app\\src\\components\\screens\\Profile.js":"7","C:\\Users\\Евгений\\Desktop\\instagram\\rsclone\\app\\src\\components\\screens\\Signup.js":"8","C:\\Users\\Евгений\\Desktop\\instagram\\rsclone\\app\\src\\components\\Footer.js":"9","C:\\Users\\Евгений\\Desktop\\instagram\\rsclone\\app\\src\\components\\screens\\NewPost.js":"10","C:\\Users\\Евгений\\Desktop\\instagram\\rsclone\\app\\src\\components\\reducers\\userReducer.js":"11","C:\\Users\\Евгений\\Desktop\\instagram\\rsclone\\app\\src\\components\\screens\\OtherUsers.js":"12","C:\\Users\\Евгений\\Desktop\\instagram\\rsclone\\app\\src\\components\\screens\\Subscribes.js":"13"},{"size":500,"mtime":499162500000,"results":"14","hashOfConfig":"15"},{"size":1762,"mtime":1611687813196,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":1162,"mtime":1611687803000,"results":"18","hashOfConfig":"15"},{"size":4113,"mtime":1611595040676,"results":"19","hashOfConfig":"15"},{"size":1931,"mtime":1611488533244,"results":"20","hashOfConfig":"15"},{"size":2847,"mtime":1611776134885,"results":"21","hashOfConfig":"15"},{"size":2876,"mtime":1611693332416,"results":"22","hashOfConfig":"15"},{"size":435,"mtime":1611352276506,"results":"23","hashOfConfig":"15"},{"size":2342,"mtime":1611435961931,"results":"24","hashOfConfig":"15"},{"size":460,"mtime":1611772929284,"results":"25","hashOfConfig":"15"},{"size":3470,"mtime":1611692437014,"results":"26","hashOfConfig":"15"},{"size":4116,"mtime":1611687559574,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1psdhu4",{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"30"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"30"},"C:\\Users\\Евгений\\Desktop\\instagram\\rsclone\\app\\src\\index.js",[],["63","64"],"C:\\Users\\Евгений\\Desktop\\instagram\\rsclone\\app\\src\\App.js",["65","66"],"import './App.css';\nimport { BrowserRouter, Route, Switch, useHistory } from 'react-router-dom';\nimport { useEffect, createContext, useReducer, useContext } from 'react';\n\nimport NavBar from './components/Navbar';\nimport Footer from './components/Footer';\nimport Home from './components/screens/Home';\nimport Signin from './components/screens/Login';\nimport Profile from './components/screens/Profile';\nimport Signup from './components/screens/Signup';\nimport NewPost from './components/screens/NewPost';\nimport OtherUsers from './components/screens/OtherUsers';\nimport Subscribes from './components/screens/Subscribes';\nimport { reducer, initialState } from './components/reducers/userReducer';\n\nexport const UserContext = createContext();\nconst Routing = () => {\n\tconst history = useHistory();\n\tconst { state, dispatch } = useContext(UserContext);\n\tuseEffect(() => {\n\t\tconst user = JSON.parse(localStorage.getItem('user'));\n\t\tif (user) {\n\t\t\tdispatch({ user: 'USER', payload: user });\n\n\t\t} else {\n\t\t\thistory.push('/signin');\n\t\t}\n\t}, [])\n\treturn (\n\t\t<Switch>\n\t\t\t<Route exact path='/'>\n\t\t\t\t<Home />\n\t\t\t</Route>\n\t\t\t<Route path='/signin'>\n\t\t\t\t<Signin />\n\t\t\t</Route>\n\t\t\t<Route exact path='/profile'>\n\t\t\t\t<Profile />\n\t\t\t</Route>\n\t\t\t<Route path='/signup'>\n\t\t\t\t<Signup />\n\t\t\t</Route>\n\t\t\t<Route path='/create'>\n\t\t\t\t<NewPost />\n\t\t\t</Route>\n\t\t\t<Route path='/profile/:userid'>\n\t\t\t\t<OtherUsers />\n\t\t\t</Route>\n\t\t\t<Route path='/myfollowingpost'>\n\t\t\t\t<Subscribes />\n\t\t\t</Route>\n\t\t</Switch>\n\t)\n}\n\nfunction App() {\n\tconst [state, dispatch] = useReducer(reducer, initialState);\n\treturn (\n\t\t<UserContext.Provider value={{ state, dispatch }}>\n\t\t\t<BrowserRouter>\n\t\t\t\t<NavBar />\n\t\t\t\t<Routing />\n\t\t\t\t<Footer />\n\t\t\t</BrowserRouter>\n\t\t</UserContext.Provider>\n\n\t);\n}\n\nexport default App;\n","C:\\Users\\Евгений\\Desktop\\instagram\\rsclone\\app\\src\\reportWebVitals.js",[],"C:\\Users\\Евгений\\Desktop\\instagram\\rsclone\\app\\src\\components\\Navbar.js",[],"C:\\Users\\Евгений\\Desktop\\instagram\\rsclone\\app\\src\\components\\screens\\Home.js",["67","68","69","70","71","72"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport { UserContext } from '../../App';\r\nimport { Link } from 'react-router-dom';\r\nconst Home = () => {\r\n\r\n\tconst [data, setData] = useState([]);\r\n\tconst { state, dispatch } = useContext(UserContext);\r\n\tconst like = null;\r\n\r\n\tuseEffect(() => {\r\n\t\tfetch('/allpost', {\r\n\t\t\theaders: {\r\n\t\t\t\t'Authorization': 'Bearer ' + localStorage.getItem('jwt')\r\n\t\t\t}\r\n\t\t})\r\n\t\t\t.then(res => res.json())\r\n\t\t\t.then(result => {\r\n\t\t\t\tsetData(result.posts);\r\n\t\t\t})\r\n\t}, []);\r\n\r\n\tconst likePost = (id) => {\r\n\t\tfetch('/like', {\r\n\t\t\tmethod: 'put',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t'Authorization': 'Bearer ' + localStorage.getItem('jwt')\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tpostId: id\r\n\t\t\t})\r\n\t\t}).then(res => res.json())\r\n\t\t\t.then(result => {\r\n\t\t\t\tconst newData = data.map(item => {\r\n\t\t\t\t\tif (item._id == result._id) {\r\n\t\t\t\t\t\treturn result;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn item;\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\tsetData(newData);\r\n\t\t\t}).catch(err => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst unlikePost = (id) => {\r\n\t\tfetch('/unlike', {\r\n\t\t\tmethod: 'put',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t'Authorization': 'Bearer ' + localStorage.getItem('jwt')\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tpostId: id\r\n\t\t\t})\r\n\t\t}).then(res => res.json())\r\n\t\t\t.then(result => {\r\n\t\t\t\tconst newData = data.map(item => {\r\n\t\t\t\t\tif (item._id == result._id) {\r\n\t\t\t\t\t\treturn result;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn item;\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\tsetData(newData);\r\n\t\t\t}).catch(err => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst makeComment = (text, postId) => {\r\n\t\tfetch('/comment', {\r\n\t\t\tmethod: 'put',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t'Authorization': 'Bearer ' + localStorage.getItem('jwt')\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tpostId,\r\n\t\t\t\ttext\r\n\t\t\t})\r\n\t\t}).then(res => res.json())\r\n\t\t\t.then(result => {\r\n\t\t\t\tconsole.log(result);\r\n\t\t\t\tconst newData = data.map(item => {\r\n\t\t\t\t\tif (item._id == result._id) {\r\n\t\t\t\t\t\treturn result;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn item;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tsetData(newData);\r\n\t\t\t}).catch(err => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst deletePost = (postId) => {\r\n\t\tfetch(`/deletepost/${postId}`, {\r\n\t\t\tmethod: 'delete',\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: 'Bearer ' + localStorage.getItem('jwt')\r\n\t\t\t}\r\n\t\t})\r\n\t\t\t.then(res => res.json())\r\n\t\t\t.then(result => {\r\n\t\t\t\tconst newData = data.filter(item => {\r\n\t\t\t\t\treturn item._id !== result._id;\r\n\t\t\t\t})\r\n\t\t\t\tsetData(newData)\r\n\t\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='home'>\r\n\t\t\t{\r\n\t\t\t\tdata.map(item => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div className='card home-card' key={item._id}>\r\n\t\t\t\t\t\t\t<h5><Link to={item.postedBy._id !== state._id ? `/profile/${item.postedBy._id}` : `/profile/`}>{item.postedBy.name}</Link>\r\n\t\t\t\t\t\t\t\t{item.postedBy._id === state._id &&\r\n\t\t\t\t\t\t\t\t\t<i className='material-icons' onClick={() => { deletePost(item._id) }}>clear</i>}\r\n\t\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t\t<div className='card-image'>\r\n\t\t\t\t\t\t\t\t<img src={item.photo} />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='card-content'>\r\n\t\t\t\t\t\t\t\t<i className=\"material-icons\">favorite</i>\r\n\t\t\t\t\t\t\t\t{item.likes.includes(state ? state._id : null)\r\n\t\t\t\t\t\t\t\t\t? <i className=\"material-icons\" onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\treturn (state ? unlikePost(item._id) : null)\r\n\t\t\t\t\t\t\t\t\t}}>thumb_down</i>\r\n\t\t\t\t\t\t\t\t\t: <i className=\"material-icons\" onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\treturn (state ? likePost(item._id) : null)\r\n\t\t\t\t\t\t\t\t\t}}>thumb_up</i>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t<h6>{item.likes.length} likes</h6>\r\n\t\t\t\t\t\t\t\t<h6>{item.title}</h6>\r\n\t\t\t\t\t\t\t\t<p>{item.body}</p>\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\titem.comments.map(record => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<h6 key={record._id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span style={{ fontWeight: '500' }}>{record.postedBy.name}</span> {record.text}\r\n\t\t\t\t\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t<form onSubmit={(e) => {\r\n\t\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\t\tmakeComment(e.target[0].value, item._id)\r\n\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t<input type='text' placeholder='add a comment' />\r\n\t\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t</div >\r\n\t);\r\n}\r\n\r\nexport default Home;","C:\\Users\\Евгений\\Desktop\\instagram\\rsclone\\app\\src\\components\\screens\\Login.js",["73","74","75"],"import React, { useState, useContext } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { UserContext } from '../../App';\r\nimport M from 'materialize-css';\r\n\r\nconst Signin = () => {\r\n\tconst { state, dispatch } = useContext(UserContext);\r\n\tconst history = useHistory();\r\n\tconst [password, setPassword] = useState('');\r\n\tconst [email, setEmail] = useState('');\r\n\tconst PostData = () => {\r\n\t\tif (!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)) {\r\n\t\t\tM.toast({ html: 'invalid email', classes: 'red darken-3' });\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tfetch('/signin', {\r\n\t\t\tmethod: 'post',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tpassword,\r\n\t\t\t\temail\r\n\t\t\t})\r\n\t\t})\r\n\t\t\t.then(res => res.json())\r\n\t\t\t.then(data => {\r\n\t\t\t\tconsole.log(data)\r\n\t\t\t\tif (data.error) {\r\n\t\t\t\t\tM.toast({ html: 'data.error', classes: 'red darken-3' });\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlocalStorage.setItem('jwt', data.token);\r\n\t\t\t\t\tlocalStorage.setItem('user', JSON.stringify(data.user));\r\n\t\t\t\t\tdispatch({ type: 'USER', payload: data.user })\r\n\t\t\t\t\tM.toast({ html: 'signedin success', classes: 'green darken-1' });\r\n\t\t\t\t\thistory.push('/');\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t};\r\n\treturn (\r\n\t\t<div className='mycard'>\r\n\t\t\t<div className=\"card auth-card input-field\">\r\n\t\t\t\t<h2>Instagram</h2>\r\n\t\t\t\t<input type='text' placeholder='email' value={email} onChange={(e) => setEmail(e.target.value)} />\r\n\t\t\t\t<input type='password' placeholder='password' value={password} onChange={(e) => setPassword(e.target.value)} />\r\n\t\t\t\t<button className=\"btn waves-effect waves-light blue lighten-2\" onClick={() => PostData()}>\r\n\t\t\t\t\tLogin\r\n\t\t\t\t</button>\r\n\t\t\t\t<h6>\r\n\t\t\t\t\t<Link to='/signup'>Dont have an account ?</Link>\r\n\t\t\t\t</h6>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Signin;","C:\\Users\\Евгений\\Desktop\\instagram\\rsclone\\app\\src\\components\\screens\\Profile.js",["76","77"],"C:\\Users\\Евгений\\Desktop\\instagram\\rsclone\\app\\src\\components\\screens\\Signup.js",["78","79","80"],"import React, { useState, useEffect } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport M from 'materialize-css';\r\n\r\nconst Signup = () => {\r\n\tconst history = useHistory();\r\n\tconst [name, setName] = useState('');\r\n\tconst [password, setPassword] = useState('');\r\n\tconst [email, setEmail] = useState('');\r\n\tconst [image, setImage] = useState('');\r\n\tconst [url, setUrl] = useState(undefined);\r\n\tuseEffect(() => {\r\n\t\tif (url) {\r\n\t\t\tuploadFields()\r\n\t\t}\r\n\t}, [url]);\r\n\r\n\tconst uploadPic = () => {\r\n\t\tconst data = new FormData();\r\n\t\tdata.append('file', image);\r\n\t\tdata.append('upload_preset', 'rsclone');\r\n\t\tdata.append('cloud_name', 'dqzybcpps');\r\n\r\n\t\tfetch('\thttps://api.cloudinary.com/v1_1/dqzybcpps/image/upload', {\r\n\t\t\tmethod: 'post',\r\n\t\t\tbody: data\r\n\t\t})\r\n\t\t\t.then(res => res.json())\r\n\t\t\t.then(data => {\r\n\t\t\t\tsetUrl(data.url);\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t}\r\n\tconst uploadFields = () => {\r\n\t\tif (!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)) {\r\n\t\t\tM.toast({ html: 'invalid email', classes: 'red darken-3' });\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tfetch('/signup', {\r\n\t\t\tmethod: 'post',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tname,\r\n\t\t\t\tpassword,\r\n\t\t\t\temail,\r\n\t\t\t\tpic: url\r\n\t\t\t})\r\n\r\n\t\t})\r\n\t\t\t.then(res => res.json())\r\n\t\t\t.then(data => {\r\n\t\t\t\tif (data.error) {\r\n\t\t\t\t\tM.toast({ html: 'data.error', classes: 'red darken-3' });\r\n\t\t\t\t} else {\r\n\t\t\t\t\tM.toast({ html: 'data.message', classes: 'green darken-1' });\r\n\t\t\t\t\thistory.push('/signin');\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t})\r\n\t};\r\n\r\n\tconst PostData = () => {\r\n\t\tif (image) {\r\n\t\t\tuploadPic();\r\n\t\t} else {\r\n\t\t\tuploadFields();\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='mycard'>\r\n\t\t\t<div className=\"card auth-card input-field\">\r\n\t\t\t\t<h2>Instagram</h2>\r\n\t\t\t\t<input type='text' placeholder='name' value={name} onChange={(e) => setName(e.target.value)} />\r\n\t\t\t\t<input type='text' placeholder='email' value={email} onChange={(e) => setEmail(e.target.value)} />\r\n\t\t\t\t<input type='password' placeholder='password' value={password} onChange={(e) => setPassword(e.target.value)} />\r\n\t\t\t\t<div className=\"file-field input-field\">\r\n\t\t\t\t\t<div className=\"btn\">\r\n\t\t\t\t\t\t<span>Upload Image</span>\r\n\t\t\t\t\t\t<input type=\"file\" onChange={(e) => setImage(e.target.files[0])} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"file-path-wrapper\">\r\n\t\t\t\t\t\t<input className=\"file-path validate\" type=\"text\" placeholder=\"Upload one or more files\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<button className=\"btn waves-effect waves-light blue lighten-2\" onClick={() => PostData()}>\r\n\t\t\t\t\tSignUp\r\n\t\t\t</button>\r\n\t\t\t\t<h6>\r\n\t\t\t\t\t<Link to='/signin'>Already have an account ?</Link>\r\n\t\t\t\t</h6>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Signup;","C:\\Users\\Евгений\\Desktop\\instagram\\rsclone\\app\\src\\components\\Footer.js",[],"C:\\Users\\Евгений\\Desktop\\instagram\\rsclone\\app\\src\\components\\screens\\NewPost.js",["81","82"],"import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport M from 'materialize-css';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst NewPost = () => {\r\n\tconst history = useHistory();\r\n\tconst [title, setTitle] = useState('');\r\n\tconst [body, setBody] = useState('');\r\n\tconst [image, setImage] = useState('');\r\n\tconst [url, setUrl] = useState('');\r\n\tuseEffect(() => {\r\n\t\tif (url) {\r\n\t\t\tfetch('/createpost', {\r\n\t\t\t\tmethod: 'post',\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t\t'Authorization': 'Bearer ' + localStorage.getItem('jwt')\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\ttitle,\r\n\t\t\t\t\tbody,\r\n\t\t\t\t\tpic: url\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\t\t.then(res => res.json())\r\n\t\t\t\t.then(data => {\r\n\t\t\t\t\tif (data.error) {\r\n\t\t\t\t\t\tM.toast({ html: 'data.error', classes: 'red darken-3' });\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tM.toast({ html: 'Created post Successfully', classes: 'green darken-1' });\r\n\t\t\t\t\t\thistory.push('/');\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.catch(err => {\r\n\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t});\r\n\t\t}\r\n\t}, [url])\r\n\r\n\tconst postDetails = () => {\r\n\t\tconst data = new FormData();\r\n\t\tdata.append('file', image);\r\n\t\tdata.append('upload_preset', 'rsclone');\r\n\t\tdata.append('cloud_name', 'dqzybcpps');\r\n\r\n\t\tfetch('\thttps://api.cloudinary.com/v1_1/dqzybcpps/image/upload', {\r\n\t\t\tmethod: 'post',\r\n\t\t\tbody: data\r\n\t\t})\r\n\t\t\t.then(res => res.json())\r\n\t\t\t.then(data => {\r\n\t\t\t\tsetUrl(data.url);\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='card input-filed' style={{ margin: '10px auto', maxWidth: '500px', textAlign: 'center', padding: '30px' }}>\r\n\t\t\t<input type='text' placeholder='title' value={title} onChange={(e) => setTitle(e.target.value)} />\r\n\t\t\t<input type='text' placeholder='body' value={body} onChange={(e) => setBody(e.target.value)} />\r\n\t\t\t<div className=\"file-field input-field\">\r\n\t\t\t\t<div className=\"btn\">\r\n\t\t\t\t\t<span>Upload Image</span>\r\n\t\t\t\t\t<input type=\"file\" onChange={(e) => setImage(e.target.files[0])} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"file-path-wrapper\">\r\n\t\t\t\t\t<input className=\"file-path validate\" type=\"text\" placeholder=\"Upload one or more files\" />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<button className=\"btn waves-effect waves-light blue lighten-2\" onClick={() => postDetails()}>\r\n\t\t\t\tSubmit post\r\n\t\t\t\t</button>\r\n\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default NewPost;","C:\\Users\\Евгений\\Desktop\\instagram\\rsclone\\app\\src\\components\\reducers\\userReducer.js",["83","84","85","86"],"export const initialState = null;\r\n\r\nexport const reducer = (state, action) => {\r\n\tif (action.type == 'USER') {\r\n\t\treturn action.payload;\r\n\t}\r\n\tif (action.type == 'CLEAR') {\r\n\t\treturn null;\r\n\t}\r\n\tif (action.type == 'UPDATE') {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tfollowers: action.payload.followers,\r\n\t\t\tfollowing: action.payload.following\r\n\t\t}\r\n\t}\r\n\tif (action.type == 'UPDATEPIC') {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tpic: action.payload\r\n\t\t}\r\n\t}\r\n\treturn state;\r\n}\r\n\r\n","C:\\Users\\Евгений\\Desktop\\instagram\\rsclone\\app\\src\\components\\screens\\OtherUsers.js",["87","88","89"],"import React, { useEffect, useState, useContext } from 'react';\r\nimport { UserContext } from '../../App';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst Profile = () => {\r\n\tconst [userProfile, setProfile] = useState(null);\r\n\tconst { state, dispatch } = useContext(UserContext);\r\n\tconst { userid } = useParams();\r\n\tconst [showfollow, setShowFollow] = useState(state ? !state.following.includes(userid) : true);\r\n\r\n\tuseEffect(() => {\r\n\t\tfetch(`/user/${userid}`, {\r\n\t\t\theaders: {\r\n\t\t\t\t'Authorization': 'Bearer ' + localStorage.getItem('jwt')\r\n\t\t\t}\r\n\t\t})\r\n\t\t\t.then(res => res.json())\r\n\t\t\t.then(res => {\r\n\t\t\t\tsetProfile(res);\r\n\r\n\t\t\t})\r\n\r\n\t}, []);\r\n\r\n\tconst followUser = () => {\r\n\t\tfetch('/follow', {\r\n\t\t\tmethod: 'put',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t'Authorization': 'Bearer ' + localStorage.getItem('jwt')\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tfollowId: userid\r\n\t\t\t})\r\n\t\t})\r\n\t\t\t.then(res => res.json())\r\n\t\t\t.then(data => {\r\n\t\t\t\tdispatch({ type: 'UPDATE', payload: { following: data.following, followers: data.followers } });\r\n\t\t\t\tlocalStorage.setItem('user', JSON.stringify(data));\r\n\t\t\t\tsetProfile((prevState) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...prevState,\r\n\t\t\t\t\t\tuser: {\r\n\t\t\t\t\t\t\t...prevState.user,\r\n\t\t\t\t\t\t\tfollowers: [...prevState.user.followers, data._id]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetShowFollow(false);\r\n\t\t\t});\r\n\t};\r\n\r\n\r\n\r\n\tconst unfollowUser = () => {\r\n\t\tfetch('/unfollow', {\r\n\t\t\tmethod: 'put',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t'Authorization': 'Bearer ' + localStorage.getItem('jwt')\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tunfollowId: userid\r\n\t\t\t})\r\n\t\t})\r\n\t\t\t.then(res => res.json())\r\n\t\t\t.then(data => {\r\n\t\t\t\tdispatch({ type: 'UPDATE', payload: { following: data.following, followers: data.followers } });\r\n\t\t\t\tlocalStorage.setItem('user', JSON.stringify(data));\r\n\t\t\t\tsetProfile((prevState) => {\r\n\t\t\t\t\tconst newFollower = prevState.user.followers.filter(item => item != data._id);\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...prevState,\r\n\t\t\t\t\t\tuser: {\r\n\t\t\t\t\t\t\t...prevState.user,\r\n\t\t\t\t\t\t\tfollowers: newFollower\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetShowFollow(true);\r\n\t\t\t});\r\n\t};\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{userProfile ?\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div style={{ display: 'flex', justifyContent: 'space-around', margin: '20px 0 ', borderBottom: '1px solid black' }}>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<img style={{ width: '150px', height: '150px', borderRadius: '50%', backgroundColor: 'red' }} src={userProfile.user.pic} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\r\n\t\t\t\t\t\t\t<h4>{userProfile.user.name}</h4>\r\n\t\t\t\t\t\t\t<h5>{userProfile.user.email}</h5>\r\n\t\t\t\t\t\t\t<div style={{ display: 'flex', justifyContent: 'space-between', width: '110%' }}>\r\n\t\t\t\t\t\t\t\t<h6>{userProfile.posts.length} posts</h6>\r\n\t\t\t\t\t\t\t\t<h6>{userProfile.user.followers.length} followers</h6>\r\n\t\t\t\t\t\t\t\t<h6>{userProfile.user.following.length} following</h6>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{showfollow ?\r\n\t\t\t\t\t\t\t\t<button className=\"btn waves-effect waves-light blue lighten-2\" onClick={() => followUser()}>Follow</button>\r\n\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t<button className=\"btn waves-effect waves-light blue lighten-2\" onClick={() => unfollowUser()}>unFollow</button>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='gallery'>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tuserProfile.posts.map(item => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<img className='gallery__item' src={item.photo} alt={item.title} key={item._id} />\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t: <h2>Loading!!!</h2>}\r\n\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Profile;","C:\\Users\\Евгений\\Desktop\\instagram\\rsclone\\app\\src\\components\\screens\\Subscribes.js",["90","91","92","93","94","95"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport { UserContext } from '../../App';\r\nimport { Link } from 'react-router-dom';\r\nconst Home = () => {\r\n\r\n\tconst [data, setData] = useState([]);\r\n\tconst { state, dispatch } = useContext(UserContext);\r\n\tconst like = null;\r\n\r\n\tuseEffect(() => {\r\n\t\tfetch('/getsubpost', {\r\n\t\t\theaders: {\r\n\t\t\t\t'Authorization': 'Bearer ' + localStorage.getItem('jwt')\r\n\t\t\t}\r\n\t\t})\r\n\t\t\t.then(res => res.json())\r\n\t\t\t.then(result => {\r\n\t\t\t\tsetData(result.posts);\r\n\t\t\t})\r\n\t}, []);\r\n\r\n\tconst likePost = (id) => {\r\n\t\tfetch('/like', {\r\n\t\t\tmethod: 'put',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t'Authorization': 'Bearer ' + localStorage.getItem('jwt')\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tpostId: id\r\n\t\t\t})\r\n\t\t}).then(res => res.json())\r\n\t\t\t.then(result => {\r\n\t\t\t\tconst newData = data.map(item => {\r\n\t\t\t\t\tif (item._id == result._id) {\r\n\t\t\t\t\t\treturn result;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn item;\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\tsetData(newData);\r\n\t\t\t}).catch(err => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst unlikePost = (id) => {\r\n\t\tfetch('/unlike', {\r\n\t\t\tmethod: 'put',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t'Authorization': 'Bearer ' + localStorage.getItem('jwt')\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tpostId: id\r\n\t\t\t})\r\n\t\t}).then(res => res.json())\r\n\t\t\t.then(result => {\r\n\t\t\t\tconst newData = data.map(item => {\r\n\t\t\t\t\tif (item._id == result._id) {\r\n\t\t\t\t\t\treturn result;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn item;\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\tsetData(newData);\r\n\t\t\t}).catch(err => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst makeComment = (text, postId) => {\r\n\t\tfetch('/comment', {\r\n\t\t\tmethod: 'put',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t'Authorization': 'Bearer ' + localStorage.getItem('jwt')\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tpostId,\r\n\t\t\t\ttext\r\n\t\t\t})\r\n\t\t}).then(res => res.json())\r\n\t\t\t.then(result => {\r\n\t\t\t\tconsole.log(result);\r\n\t\t\t\tconst newData = data.map(item => {\r\n\t\t\t\t\tif (item._id == result._id) {\r\n\t\t\t\t\t\treturn result;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn item;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tsetData(newData);\r\n\t\t\t}).catch(err => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst deletePost = (postId) => {\r\n\t\tfetch(`/deletepost/${postId}`, {\r\n\t\t\tmethod: 'delete',\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: 'Bearer ' + localStorage.getItem('jwt')\r\n\t\t\t}\r\n\t\t})\r\n\t\t\t.then(res => res.json())\r\n\t\t\t.then(result => {\r\n\t\t\t\tconst newData = data.filter(item => {\r\n\t\t\t\t\treturn item._id !== result._id;\r\n\t\t\t\t})\r\n\t\t\t\tsetData(newData)\r\n\t\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='home'>\r\n\t\t\t{\r\n\t\t\t\tdata.map(item => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div className='card home-card' key={item._id}>\r\n\t\t\t\t\t\t\t<h5><Link to={item.postedBy._id !== state._id ? `/profile/${item.postedBy._id}` : `/profile/`}>{item.postedBy.name}</Link>\r\n\t\t\t\t\t\t\t\t{item.postedBy._id === state._id &&\r\n\t\t\t\t\t\t\t\t\t<i className='material-icons' onClick={() => { deletePost(item._id) }}>clear</i>}\r\n\t\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t\t<div className='card-image'>\r\n\t\t\t\t\t\t\t\t<img src={item.photo} />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='card-content'>\r\n\t\t\t\t\t\t\t\t<i className=\"material-icons\">favorite</i>\r\n\t\t\t\t\t\t\t\t{item.likes.includes(state ? state._id : null)\r\n\t\t\t\t\t\t\t\t\t? <i className=\"material-icons\" onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\treturn (state ? unlikePost(item._id) : null)\r\n\t\t\t\t\t\t\t\t\t}}>thumb_down</i>\r\n\t\t\t\t\t\t\t\t\t: <i className=\"material-icons\" onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\treturn (state ? likePost(item._id) : null)\r\n\t\t\t\t\t\t\t\t\t}}>thumb_up</i>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t<h6>{item.likes.length} likes</h6>\r\n\t\t\t\t\t\t\t\t<h6>{item.title}</h6>\r\n\t\t\t\t\t\t\t\t<p>{item.body}</p>\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\titem.comments.map(record => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<h6 key={record._id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span style={{ fontWeight: '500' }}>{record.postedBy.name}</span> {record.text}\r\n\t\t\t\t\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t<form onSubmit={(e) => {\r\n\t\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\t\tmakeComment(e.target[0].value, item._id)\r\n\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t<input type='text' placeholder='add a comment' />\r\n\t\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t</div >\r\n\t);\r\n}\r\n\r\nexport default Home;",{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":19,"column":10,"nodeType":"102","messageId":"103","endLine":19,"endColumn":15},{"ruleId":"104","severity":1,"message":"105","line":28,"column":5,"nodeType":"106","endLine":28,"endColumn":7,"suggestions":"107"},{"ruleId":"100","severity":1,"message":"108","line":7,"column":17,"nodeType":"102","messageId":"103","endLine":7,"endColumn":25},{"ruleId":"100","severity":1,"message":"109","line":8,"column":8,"nodeType":"102","messageId":"103","endLine":8,"endColumn":12},{"ruleId":"110","severity":1,"message":"111","line":35,"column":19,"nodeType":"112","messageId":"113","endLine":35,"endColumn":21},{"ruleId":"110","severity":1,"message":"111","line":60,"column":19,"nodeType":"112","messageId":"113","endLine":60,"endColumn":21},{"ruleId":"110","severity":1,"message":"111","line":87,"column":19,"nodeType":"112","messageId":"113","endLine":87,"endColumn":21},{"ruleId":"114","severity":1,"message":"115","line":126,"column":9,"nodeType":"116","endLine":126,"endColumn":33},{"ruleId":"100","severity":1,"message":"101","line":7,"column":10,"nodeType":"102","messageId":"103","endLine":7,"endColumn":15},{"ruleId":"117","severity":1,"message":"118","line":12,"column":18,"nodeType":"119","messageId":"120","endLine":12,"endColumn":19,"suggestions":"121"},{"ruleId":"117","severity":1,"message":"118","line":12,"column":43,"nodeType":"119","messageId":"120","endLine":12,"endColumn":44,"suggestions":"122"},{"ruleId":"104","severity":1,"message":"123","line":58,"column":5,"nodeType":"106","endLine":58,"endColumn":12,"suggestions":"124"},{"ruleId":"114","severity":1,"message":"115","line":66,"column":6,"nodeType":"116","endLine":66,"endColumn":138},{"ruleId":"104","severity":1,"message":"125","line":16,"column":5,"nodeType":"106","endLine":16,"endColumn":10,"suggestions":"126"},{"ruleId":"117","severity":1,"message":"118","line":37,"column":18,"nodeType":"119","messageId":"120","endLine":37,"endColumn":19,"suggestions":"127"},{"ruleId":"117","severity":1,"message":"118","line":37,"column":43,"nodeType":"119","messageId":"120","endLine":37,"endColumn":44,"suggestions":"128"},{"ruleId":"100","severity":1,"message":"129","line":2,"column":10,"nodeType":"102","messageId":"103","endLine":2,"endColumn":14},{"ruleId":"104","severity":1,"message":"130","line":39,"column":5,"nodeType":"106","endLine":39,"endColumn":10,"suggestions":"131"},{"ruleId":"110","severity":1,"message":"111","line":4,"column":18,"nodeType":"112","messageId":"113","endLine":4,"endColumn":20},{"ruleId":"110","severity":1,"message":"111","line":7,"column":18,"nodeType":"112","messageId":"113","endLine":7,"endColumn":20},{"ruleId":"110","severity":1,"message":"111","line":10,"column":18,"nodeType":"112","messageId":"113","endLine":10,"endColumn":20},{"ruleId":"110","severity":1,"message":"111","line":17,"column":18,"nodeType":"112","messageId":"113","endLine":17,"endColumn":20},{"ruleId":"104","severity":1,"message":"132","line":23,"column":5,"nodeType":"106","endLine":23,"endColumn":7,"suggestions":"133"},{"ruleId":"110","severity":1,"message":"134","line":71,"column":71,"nodeType":"112","messageId":"113","endLine":71,"endColumn":73},{"ruleId":"114","severity":1,"message":"115","line":91,"column":8,"nodeType":"116","endLine":91,"endColumn":131},{"ruleId":"100","severity":1,"message":"108","line":7,"column":17,"nodeType":"102","messageId":"103","endLine":7,"endColumn":25},{"ruleId":"100","severity":1,"message":"109","line":8,"column":8,"nodeType":"102","messageId":"103","endLine":8,"endColumn":12},{"ruleId":"110","severity":1,"message":"111","line":35,"column":19,"nodeType":"112","messageId":"113","endLine":35,"endColumn":21},{"ruleId":"110","severity":1,"message":"111","line":60,"column":19,"nodeType":"112","messageId":"113","endLine":60,"endColumn":21},{"ruleId":"110","severity":1,"message":"111","line":87,"column":19,"nodeType":"112","messageId":"113","endLine":87,"endColumn":21},{"ruleId":"114","severity":1,"message":"115","line":126,"column":9,"nodeType":"116","endLine":126,"endColumn":33},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["137"],"'dispatch' is assigned a value but never used.","'like' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["138","139"],["140","141"],"React Hook useEffect has missing dependencies: 'dispatch' and 'state'. Either include them or remove the dependency array.",["142"],"React Hook useEffect has a missing dependency: 'uploadFields'. Either include it or remove the dependency array.",["143"],["144","145"],["146","147"],"'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'body', 'history', and 'title'. Either include them or remove the dependency array.",["148"],"React Hook useEffect has a missing dependency: 'userid'. Either include it or remove the dependency array.",["149"],"Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation",{"desc":"150","fix":"151"},{"messageId":"152","fix":"153","desc":"154"},{"messageId":"155","fix":"156","desc":"157"},{"messageId":"152","fix":"158","desc":"154"},{"messageId":"155","fix":"159","desc":"157"},{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},{"messageId":"152","fix":"164","desc":"154"},{"messageId":"155","fix":"165","desc":"157"},{"messageId":"152","fix":"166","desc":"154"},{"messageId":"155","fix":"167","desc":"157"},{"desc":"168","fix":"169"},{"desc":"170","fix":"171"},"Update the dependencies array to be: [dispatch, history]",{"range":"172","text":"173"},"removeEscape",{"range":"174","text":"175"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"176","text":"177"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"178","text":"175"},{"range":"179","text":"177"},"Update the dependencies array to be: [dispatch, image, state]",{"range":"180","text":"181"},"Update the dependencies array to be: [uploadFields, url]",{"range":"182","text":"183"},{"range":"184","text":"175"},{"range":"185","text":"177"},{"range":"186","text":"175"},{"range":"187","text":"177"},"Update the dependencies array to be: [body, history, title, url]",{"range":"188","text":"189"},"Update the dependencies array to be: [userid]",{"range":"190","text":"191"},[1034,1036],"[dispatch, history]",[431,432],"",[431,431],"\\",[456,457],[456,456],[1449,1456],"[dispatch, image, state]",[478,483],"[uploadFields, url]",[962,963],[962,962],[987,988],[987,987],[1034,1039],"[body, history, title, url]",[646,648],"[userid]"]